version: '3.7'

networks:
  fermat-gateway-network:
    driver: bridge

services:
  traefik:
    image: traefik:v2.10.4
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.fermatresolver.acme.email=contact@swizzle.run"
      - "--certificatesresolvers.fermatresolver.acme.caServer=https://acme.zerossl.com/v2/DV90"
      - "--certificatesresolvers.fermatresolver.acme.storage=/zero_ssl/acme.json"
      - "--certificatesresolvers.fermatresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.fermatresolver.acme.eab.kid=${ZERO_SSL_KID}"
      - "--certificatesresolvers.fermatresolver.acme.eab.hmacEncoded=${ZERO_SSL_HMAC_KEY}"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./zero_ssl:/zero_ssl"
    labels:
      - "traefik.http.routers.api.rule=Host(`traefik.${FERMAT_SUBDOMAIN}.swizzle.run`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls.certresolver=fermatresolver"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    restart: always

  einstein:
    environment:
      API_KEY: ${API_KEY}
      JWT_SECRET: ${JWT_SECRET}
    image: us-central1-docker.pkg.dev/swizzle-prod/einstein/einstein:latest
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    restart: always

  fermat-gateway:
    image: nginx:mainline
    networks:
      - fermat-gateway-network
    command: /bin/sh -c "echo 'events {} http { log_format main \'$$remote_addr - $$remote_user [$$time_local] \"$$request\" $$status $$body_bytes_sent \"$$http_referer\" \"$$http_user_agent\"\' ; access_log /var/log/nginx/access.log main; server { listen 5552; location / { proxy_pass http://172.17.0.1:1234; proxy_set_header Host $$host; proxy_set_header X-Real-IP $$remote_addr; proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for; } } }' > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    volumes:
      - ./nginx_logs:/var/log/nginx  # Mount host directory to container log directory
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-gateway.rule=Host(`fermat.${FERMAT_SUBDOMAIN}.swizzle.run`)"
      - "traefik.http.routers.nginx-gateway.entrypoints=websecure"
      - "traefik.http.routers.nginx-gateway.tls.certresolver=fermatresolver"
      - "traefik.http.services.nginx-gateway.loadbalancer.server.port=5552"
      # auth middleware -----------------------------------------------
      - "traefik.http.routers.nginx-gateway.middlewares=auth"
      - "traefik.http.middlewares.auth.forwardauth.address=http://localhost:2244/check"
      - "traefik.http.middlewares.auth.forwardauth.trustForwardHeader=true"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    restart: always
  pascal:
    image: us-central1-docker.pkg.dev/swizzle-prod/pascal/pascal:latest
    volumes:
      - $HOME/code:$HOME/code
      - $HOME/.config/gcloud/application_default_credentials.json:/home/root/.config/gcloud/application_default_credentials.json
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /home/root/.config/gcloud/application_default_credentials.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pascal.rule=Host(`pascal.${FERMAT_SUBDOMAIN}.swizzle.run`)"
      - "traefik.http.routers.pascal.entrypoints=web"
      - "traefik.http.routers.pascalsecure.rule=Host(`pascal.${FERMAT_SUBDOMAIN}.swizzle.run`)"
      - "traefik.http.routers.pascalsecure.entrypoints=websecure"
      - "traefik.http.routers.pascalsecure.tls.certresolver=fermatresolver"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    ports:
      - "3000:3000"
    restart: unless-stopped

  nodemon-server:
    image: node:18
    working_dir: /swizzle-data/code
    environment:
      SWIZZLE_SUPER_SECRET: ${SWIZZLE_SUPER_SECRET}
      SWIZZLE_PROJECT_NAME: ${SWIZZLE_PROJECT_NAME}
      SWIZZLE_ENV: test
      GOOGLE_APPLICATION_CREDENTIALS: /home/root/.config/gcloud/application_default_credentials.json
      PORT: 4411
    volumes:
      - $HOME/code:/swizzle-data/code
      - $HOME/.config/gcloud/application_default_credentials.json:/home/root/.config/gcloud/application_default_credentials.json
    command: sh -c "npm install && npx nodemon --inspect=0.0.0.0:9229 server.js >> /swizzle-data/code/app.log 2>&1"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.runner.rule=Host(`runner.${FERMAT_SUBDOMAIN}.swizzle.run`)"
      - "traefik.http.routers.runner.entrypoints=web"
      - "traefik.http.routers.runnersecure.rule=Host(`runner.${FERMAT_SUBDOMAIN}.swizzle.run`)"
      - "traefik.http.routers.runnersecure.entrypoints=websecure"
      - "traefik.http.routers.runnersecure.tls.certresolver=fermatresolver"
    ports: [ "4411:4411", "9229:9229" ]
    restart: always

  mongo:
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    image: mongo:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mongo.rule=Host(`db.${FERMAT_SUBDOMAIN}.swizzle.run`)"
      - "traefik.http.routers.mongo.entrypoints=web"
      - "traefik.http.routers.mongosecure.rule=Host(`db.${FERMAT_SUBDOMAIN}.swizzle.run`)"
      - "traefik.http.routers.mongosecure.entrypoints=websecure"
      - "traefik.http.routers.mongosecure.tls.certresolver=fermatresolver"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: always

volumes:
  mongo-data:
